package io.luan.jerry.item.domain;

import io.luan.jerry.common.domain.Entity;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.ToString;

import java.time.LocalDateTime;
import java.time.OffsetDateTime;

@Data
@EqualsAndHashCode(callSuper = false)
public class Item extends Entity {

    static final long serialVersionUID = 1L;

    /**
     * id for the item, for now it's generated by the db
     */
    private Long id;

    /**
     * Seller's userId
     */
    private Long userId;

    /**
     * Title of the item
     */
    private String title;

    /**
     * Image of the item
     */
    private String imgUrl;

    /**
     * Price in cents
     */
    private Long price;

    /**
     * Leaf category ID
     */
    private Long categoryId;

    /**
     * Inventory ID
     */
    private Long inventoryId = 0L;

    /**
     * Create Time
     */
    private OffsetDateTime gmtCreate = OffsetDateTime.now().withNano(0);

    /**
     * Modify Time
     */
    private OffsetDateTime gmtModified = OffsetDateTime.now().withNano(0);

    public Item() {

    }

    public void setImgUrl(String newValue) {
        if (!newValue.equals(this.imgUrl)) {
            firePropertyChange("imgUrl", imgUrl, newValue);
            this.imgUrl = newValue;
            this.gmtModified = OffsetDateTime.now().withNano(0);
        }
    }

    public void setPrice(Long newValue) {
        if (!newValue.equals(this.price)) {
            firePropertyChange("price", price, newValue);
            this.price = newValue;
            this.gmtModified = OffsetDateTime.now().withNano(0);
        }
    }

    public void setTitle(String newValue) {
        if (!newValue.equals(this.title)) {
            firePropertyChange("title", title, newValue);
            this.title = newValue;
            this.gmtModified = OffsetDateTime.now().withNano(0);
        }
    }

    public void setInventoryId(Long newValue) {
        if (!newValue.equals(this.inventoryId)) {
            firePropertyChange("inventoryId", inventoryId, newValue);
            this.inventoryId = newValue;
            this.gmtModified = OffsetDateTime.now().withNano(0);
        }
    }
}
